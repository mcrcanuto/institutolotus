{
  "version": 3,
  "sources": ["../../node_modules/react-tiny-fab/node_modules/style-inject/dist/style-inject.es.js", "../../node_modules/react-tiny-fab/src/index.tsx"],
  "sourcesContent": ["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import React, { useState } from 'react';\n\nimport './styles.scss';\n\ninterface ABProps extends React.HTMLAttributes<HTMLButtonElement> {\n  text?: string;\n  onClick?: (e: React.FormEvent) => void;\n  'data-testid'?: string;\n}\n\nconst AB: React.FC<ABProps> = ({ children, ...p }) => (\n  <button type=\"button\" {...p} className=\"rtf--ab\">\n    {children}\n  </button>\n);\n\ninterface MBProps extends Omit<React.HTMLAttributes<HTMLButtonElement>, 'tabIndex'> {\n  tabIndex?: number;\n}\n\nexport const MB: React.FC<MBProps> = ({ children, ...p }) => (\n  <button type=\"button\" className=\"rtf--mb\" {...p}>\n    {children}\n  </button>\n);\n\nconst defaultStyles: React.CSSProperties = { bottom: 24, right: 24 };\n\ninterface FabProps {\n  event?: 'hover' | 'click';\n  style?: React.CSSProperties;\n  alwaysShowTitle?: boolean;\n  icon?: React.ReactNode;\n  mainButtonStyles?: React.CSSProperties;\n  onClick?: (e: React.FormEvent) => void;\n  text?: string;\n  children?: React.ReactNode;\n}\n\nconst Fab: React.FC<FabProps> = ({\n  event = 'hover',\n  style = defaultStyles,\n  alwaysShowTitle = false,\n  children,\n  icon,\n  mainButtonStyles,\n  onClick,\n  text,\n  ...p\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const ariaHidden = alwaysShowTitle || !isOpen;\n  const interpolatedEvent = 'ontouchstart' in window ? 'click' : event;\n  const open = () => setIsOpen(true);\n  const close = () => setIsOpen(false);\n  const enter = () => interpolatedEvent === 'hover' && open();\n  const leave = () => interpolatedEvent === 'hover' && close();\n  const toggle = (e: React.FormEvent) => {\n    if (onClick) {\n      return onClick(e);\n    }\n    e.persist();\n    return interpolatedEvent === 'click' ? (isOpen ? close() : open()) : null;\n  };\n\n  const actionOnClick = (e: React.FormEvent, userFunc: (e: React.FormEvent) => void) => {\n    e.persist();\n    setIsOpen(false);\n    setTimeout(() => {\n      userFunc(e);\n    }, 1);\n  };\n\n  const rc = () =>\n    React.Children.map(children, (ch, i) => {\n      if (React.isValidElement<ABProps>(ch)) {\n        return (\n          <li className={`rtf--ab__c ${'top' in style ? 'top' : ''}`}>\n            {React.cloneElement(ch, {\n              'data-testid': `action-button-${i}`,\n              'aria-label': ch.props.text || `Menu button ${i + 1}`,\n              'aria-hidden': ariaHidden,\n              tabIndex: isOpen ? 0 : -1,\n              ...ch.props,\n              onClick: (e: React.FormEvent) => {\n                if (ch.props.onClick) actionOnClick(e, ch.props.onClick);\n              },\n            })}\n            {ch.props.text && (\n              <span\n                className={`${'right' in style ? 'right' : ''} ${\n                  alwaysShowTitle ? 'always-show' : ''\n                }`}\n                aria-hidden={ariaHidden}\n              >\n                {ch.props.text}\n              </span>\n            )}\n          </li>\n        );\n      }\n      return null;\n    });\n\n  return (\n    <ul\n      onMouseEnter={enter}\n      onMouseLeave={leave}\n      className={`rtf ${isOpen ? 'open' : 'closed'}`}\n      data-testid=\"fab\"\n      style={style}\n      {...p}\n    >\n      <li className=\"rtf--mb__c\">\n        <MB\n          onClick={toggle}\n          style={mainButtonStyles}\n          data-testid=\"main-button\"\n          role=\"button\"\n          aria-label=\"Floating menu\"\n          tabIndex={0}\n        >\n          {icon}\n        </MB>\n        {text && (\n          <span\n            className={`${'right' in style ? 'right' : ''} ${alwaysShowTitle ? 'always-show' : ''}`}\n            aria-hidden={ariaHidden}\n          >\n            {text}\n          </span>\n        )}\n        <ul>{rc()}</ul>\n      </li>\n    </ul>\n  );\n};\n\nexport { Fab, AB as Action };\n"],
  "mappings": "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",
  "names": ["AB", "children", "p", "React", "type", "className", "MB", "defaultStyles", "bottom", "right", "Fab", "event", "style", "alwaysShowTitle", "icon", "mainButtonStyles", "onClick", "text", "useState", "isOpen", "setIsOpen", "ariaHidden", "interpolatedEvent", "window", "open", "close", "enter", "leave", "toggle", "e", "persist", "actionOnClick", "userFunc", "setTimeout", "rc", "Children", "map", "ch", "i", "isValidElement", "cloneElement", "props", "tabIndex", "onMouseEnter", "onMouseLeave", "role"]
}
